// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model StoreInformation {
  id                String   @id @default(cuid())
  shop              String   @unique
  storeName         String?
  storeDescription  String?
  shippingPolicy    String?
  returnPolicy      String?
  storeHours        String?
  contactInfo       String?
  specialServices   String?
  aboutUs           String?
  additionalInfo    String?
  // Plan tracking for referrals and feature access
  pricingPlan       String?  @default("free") // free, basic, premium, enterprise
  planStartDate     DateTime?
  referralCode      String?  // Code used when signing up
  referrerPayoutId  String?  // Track if referrer has been paid
  monthlyQuestions  Int?     @default(0) // Track usage against plan limits
  planLimits        Json?    // Store plan-specific limits as JSON
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model CustomerQuestion {
  id       String   @id @default(cuid())
  shop     String
  question String
  askedAt  DateTime @default(now())
  times    Int      @default(1)

  @@unique([shop, question])
  @@index([shop, askedAt])
}

model ProductPageView {
  id       String   @id @default(cuid())
  shop     String
  viewedAt DateTime @default(now())
  // Optional: add productId if you want to track specific products
  productId String?
  // Optional: add userAgent or other metadata
  userAgent String?

  @@index([shop, viewedAt])
}
