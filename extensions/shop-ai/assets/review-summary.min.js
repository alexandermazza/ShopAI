const ReviewSummary={async waitForJudgeMeReviews(e=2e4){let t=document.querySelectorAll(".jdgm-rev");return t.length>0?t:new Promise(t=>{let o=!1;const r=new MutationObserver(()=>{const e=document.querySelectorAll(".jdgm-rev");e.length>0&&(o=!0,r.disconnect(),t(e))});r.observe(document.body,{childList:!0,subtree:!0}),setTimeout(()=>{if(!o){r.disconnect();const e=document.querySelectorAll(".jdgm-rev");t(e)}},e)})},async scrapeReviewContent(){let e=[];const t=await this.waitForJudgeMeReviews();if(t.length>0)t.forEach((t,o)=>{if(o>=10)return;const r=t.querySelector(".jdgm-rev__rating"),n=t.querySelector(".jdgm-rev__body p"),a=t.querySelector(".jdgm-rev__body");let s="";n&&n.textContent.trim()?s=n.textContent.trim():a&&a.textContent.trim()&&(s=a.textContent.trim());const i=r&&(r.getAttribute("data-score")||r.textContent.trim())||"?";s&&e.push(`Rating: ${i}/5 - Comment: "${s}"`)});else{let t=document.querySelectorAll(".spr-review");0===t.length&&(t=document.querySelectorAll(".shopify-product-reviews .review")),t.length>0&&t.forEach((t,o)=>{if(o>=10)return;const r=t.querySelector(".spr-review-rating, .review-rating"),n=t.querySelector(".spr-review-content, .review-content"),a=r?r.textContent.trim().replace(/\s+/g," "):"?",s=n?n.textContent.trim().replace(/\s+/g," "):"";s&&e.push(`Rating: ${a}/5 - Comment: "${s}"`)})}if(0===e.length)return null;return e.join("\n")},getStarRatingInfo(){console.log("ReviewSummary: Looking for star ratings...");const e=document.querySelector("[data-judge-me-rating]");if(e){const t=e.dataset.judgeMeRating,o=e.dataset.judgeMeCount;if(t&&o){return`${"★".repeat(Math.floor(parseFloat(t)))+"☆".repeat(5-Math.floor(parseFloat(t)))} ${t}/5 based on ${o} customer ${"1"===o?"review":"reviews"}`}}const t=document.querySelector(".jdgm-widget");if(t){const e=t.querySelector(".jdgm-avg-rating"),o=t.querySelector(".jdgm-num-reviews");if(e&&o){const t=e.textContent.trim(),r=o.textContent.trim();if(t&&r){return`${"★".repeat(Math.floor(parseFloat(t)))+"☆".repeat(5-Math.floor(parseFloat(t)))} ${t}/5 based on ${r} customer reviews`}}}const o=document.querySelector(".shopify-product-reviews-badges .spr-badge");if(o){const e=o.dataset.rating||o.querySelector(".spr-starrating")?.dataset.rating,t=o.dataset.reviewCount||o.querySelector(".spr-review-count")?.textContent;if(e&&t){return`${"★".repeat(Math.floor(parseFloat(e)))+"☆".repeat(5-Math.floor(parseFloat(e)))} ${e}/5 based on ${t} customer reviews`}}const r=document.querySelector(".rating, .product-rating, .review-rating");if(r){const e=r.textContent.trim().match(/(\d+\.?\d*)\s*\/?\s*5?/);if(e){const t=e[1];return`${"★".repeat(Math.floor(parseFloat(t)))+"☆".repeat(5-Math.floor(parseFloat(t)))} ${t}/5 customer rating`}}const n=document.querySelector("[data-product-rating], [data-rating]");if(n){const e=n.dataset.productRating||n.dataset.rating,t=n.dataset.reviewCount||n.dataset.ratingCount;if(e){return`${"★".repeat(Math.floor(parseFloat(e)))+"☆".repeat(5-Math.floor(parseFloat(e)))} ${e}/5${t?` based on ${t} reviews`:""}`}}return console.log("ReviewSummary: No star rating info found"),null},async trackPageView(){try{let e=null;e=window.Shopify&&window.Shopify.shop?window.Shopify.shop:window.location.hostname;let t=null;if(window.ShopifyAnalytics&&window.ShopifyAnalytics.meta&&window.ShopifyAnalytics.meta.product?t=window.ShopifyAnalytics.meta.product.id?.toString():window.meta&&window.meta.product&&(t=window.meta.product.id?.toString()),!e)return void console.warn("ReviewSummary: Unable to determine shop for page view tracking");const o=`/apps/proxy/api/page-view-tracking?shop=${encodeURIComponent(e)}`;try{const o=`shopai_pv_${e}_${t||"x"}`,r=sessionStorage.getItem(o),n=Date.now();if(r&&n-parseInt(r,10)<12e4)return void console.log("ReviewSummary: Skipping duplicate page view within 2 minutes");sessionStorage.setItem(o,String(n))}catch{}const r=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({shop:e,productId:t})});r.ok?console.log("ReviewSummary: Page view tracked successfully"):console.warn("ReviewSummary: Failed to track page view:",r.status)}catch(e){console.warn("ReviewSummary: Page view tracking failed, will retry:",e),setTimeout(async()=>{try{(await fetch(trackUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({shop:shop,productId:productId})})).ok&&console.log("ReviewSummary: Page view tracked on retry")}catch(e){}},2e3)}},async onMount(e=document){if(console.log("ReviewSummary: onMount called for container:",e),!e||"review-summary-block"!==e.id)return void console.error("ReviewSummary: Invalid containerElement passed to onMount:",e);console.log("ReviewSummary: Container validated, proceeding with initialization"),this.trackPageView();const t=e.querySelector(".summary-response-area"),o=t?.querySelector(".ai-summary-content"),r=t?.querySelector(".summary-attribution");if(!t||!o||!r)return console.error("ReviewSummary: Missing required elements."),t||console.error(">>> ReviewSummary: responseArea missing"),o||console.error(">>> ReviewSummary: summaryContentElement missing"),r||console.error(">>> ReviewSummary: attributionElement missing"),e.classList.add("visible"),e.classList.add("loaded"),void(o&&(o.textContent="Configuration error. Reach out to info@shop-ai.co to resolve any issues.",t&&t.classList.add("error")));const n=await this.scrapeReviewContent();let a="default";if(e&&e.hasAttribute("data-block-settings"))try{const t=JSON.parse(e.getAttribute("data-block-settings"));t&&t.tone_of_voice&&(a=t.tone_of_voice)}catch(e){console.warn("ReviewSummary: Failed to parse data-block-settings for tone_of_voice:",e)}if(console.log("ReviewSummary: scrapedReviews to send:",n,"toneOfVoice:",a),e.classList.add("visible"),o.textContent="",t.classList.remove("error"),r.classList.add("hidden"),!n){console.log("ReviewSummary: No review text found, checking for star ratings...");const n=this.getStarRatingInfo();return n?(console.log("ReviewSummary: Found star rating info:",n),o.textContent=n,t.classList.remove("loading"),t.classList.remove("error"),e.classList.add("loaded"),r.classList.remove("hidden"),void(window.TextGenerateEffect&&TextGenerateEffect.animateText(o,n,{duration:.6,staggerDelay:.08,filter:!0}))):(console.log("ReviewSummary: No reviews or ratings found, showing error message."),o.textContent="No reviews detected. Reach out to info@shop-ai.co to resolve any issues.",t.classList.add("error"),void e.classList.add("loaded"))}console.log(">>> ReviewSummary: Elements Check:",{containerElement:e,summaryContentElement:o,responseArea:t,attributionElement:r}),t.classList.add("loading");console.log(">>> ReviewSummary: BEFORE fetch call");try{const s=await fetch("/apps/proxy/resource-review-summary",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({scrapedReviews:n,toneOfVoice:"default"!==a?a:void 0})});if(console.log(">>> ReviewSummary: AFTER fetch call, Status:",s.status),console.log(`>>> ReviewSummary: Response status: ${s.status}, ok: ${s.ok}`),!s.ok)throw console.error(">>> ReviewSummary: Response not OK",s.status,s.statusText),new Error(`API Error: ${s.status}`);console.log(">>> ReviewSummary: Receiving non-streamed JSON response..."),o.textContent="",t.classList.remove("loading"),e.classList.add("loaded");const i=s.headers.get("content-type");console.log(">>> ReviewSummary: Response Content-Type:",i);let c="Sorry, could not parse the summary.";console.log(">>> ReviewSummary: BEFORE response.json()");try{const e=await s.json();console.log(">>> ReviewSummary: AFTER response.json(), Data:",e),e&&"string"==typeof e.summary?c=e.summary:(console.error(">>> ReviewSummary: Invalid data structure",e),c="Error: Invalid response format.",t.classList.add("error"))}catch(e){console.error(">>> ReviewSummary: Error parsing JSON response:",e);try{const e=await s.text();console.warn(">>> ReviewSummary: Displaying raw text due to JSON parse error:",e),c=e}catch(e){console.error(">>> ReviewSummary: Failed to get raw text after JSON parse error:",e),c="Error loading summary."}t.classList.add("error")}t.classList.contains("error")?(o.textContent=c,r.classList.add("hidden")):(window.TextGenerateEffect?TextGenerateEffect.animateText(o,c,{duration:.6,staggerDelay:.1,filter:!0}):o.textContent=c,r.classList.remove("hidden"))}catch(n){console.error(">>> ReviewSummary: CATCH BLOCK error:",n),o.textContent=`Error: ${n.message||"Could not load summary."}`,t.classList.remove("loading"),t.classList.add("error"),e.classList.add("loaded"),r.classList.add("hidden")}finally{console.log(">>> ReviewSummary: FINALLY block reached")}}};window.ReviewSummary=ReviewSummary,document.addEventListener("shopify:section:load",function(e){const t=e.detail.sectionId,o=document.getElementById(`shopify-section-${t}`);if(!o)return;const r=o.querySelector("#review-summary-block");r&&"true"!==r.dataset.initialized&&(ReviewSummary.onMount(r),r.dataset.initialized="true")}),document.addEventListener("DOMContentLoaded",()=>{console.log("ReviewSummary: DOMContentLoaded event fired - looking for review blocks.");const e=document.querySelectorAll('#review-summary-block:not([data-initialized="true"])');console.log("ReviewSummary: Found blocks:",e.length),e.forEach(e=>{console.log("ReviewSummary: Initializing component via DOMContentLoaded for block:",e),ReviewSummary.onMount(e),e.dataset.initialized="true"})});