const ReviewSummary={async waitForJudgeMeReviews(e=2e4){let t=document.querySelectorAll(".jdgm-rev");return t.length>0?t:new Promise((t=>{let r=!1;const o=new MutationObserver((()=>{const e=document.querySelectorAll(".jdgm-rev");e.length>0&&(r=!0,o.disconnect(),t(e))}));o.observe(document.body,{childList:!0,subtree:!0}),setTimeout((()=>{if(!r){o.disconnect();const e=document.querySelectorAll(".jdgm-rev");t(e)}}),e)}))},async scrapeReviewContent(){let e=[];const t=await this.waitForJudgeMeReviews();if(t.length>0)t.forEach(((t,r)=>{if(r>=10)return;const o=t.querySelector(".jdgm-rev__rating"),n=t.querySelector(".jdgm-rev__body p"),s=t.querySelector(".jdgm-rev__body");let a="";n&&n.textContent.trim()?a=n.textContent.trim():s&&s.textContent.trim()&&(a=s.textContent.trim());const i=o&&(o.getAttribute("data-score")||o.textContent.trim())||"?";a&&e.push(`Rating: ${i}/5 - Comment: "${a}"`)}));else{let t=document.querySelectorAll(".spr-review");0===t.length&&(t=document.querySelectorAll(".shopify-product-reviews .review")),t.length>0&&t.forEach(((t,r)=>{if(r>=10)return;const o=t.querySelector(".spr-review-rating, .review-rating"),n=t.querySelector(".spr-review-content, .review-content"),s=o?o.textContent.trim().replace(/\s+/g," "):"?",a=n?n.textContent.trim().replace(/\s+/g," "):"";a&&e.push(`Rating: ${s}/5 - Comment: "${a}"`)}))}if(0===e.length)return null;return e.join("\n")},async onMount(e=document){if(!e||"review-summary-block"!==e.id)return void console.error("ReviewSummary: Invalid containerElement passed to onMount:",e);const t=e.querySelector(".summary-response-area"),r=t?.querySelector(".ai-summary-content"),o=t?.querySelector(".summary-attribution");if(!t||!r||!o)return console.error("ReviewSummary: Missing required elements."),t||console.error(">>> ReviewSummary: responseArea missing"),r||console.error(">>> ReviewSummary: summaryContentElement missing"),o||console.error(">>> ReviewSummary: attributionElement missing"),void(e.style.display="none");const n=await this.scrapeReviewContent();let s="default";if(e&&e.hasAttribute("data-block-settings"))try{const t=JSON.parse(e.getAttribute("data-block-settings"));t&&t.tone_of_voice&&(s=t.tone_of_voice)}catch(e){console.warn("ReviewSummary: Failed to parse data-block-settings for tone_of_voice:",e)}if(console.log("ReviewSummary: scrapedReviews to send:",n,"toneOfVoice:",s),!n)return void(e.style.display="none");console.log(">>> ReviewSummary: Elements Check:",{containerElement:e,summaryContentElement:r,responseArea:t,attributionElement:o}),e.classList.add("visible"),r.textContent="",t.classList.remove("error"),t.classList.add("loading"),o.classList.add("hidden");console.log(">>> ReviewSummary: BEFORE fetch call");try{const a=await fetch("/apps/proxy/resource-review-summary",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({scrapedReviews:n,toneOfVoice:"default"!==s?s:void 0})});if(console.log(">>> ReviewSummary: AFTER fetch call, Status:",a.status),console.log(`>>> ReviewSummary: Response status: ${a.status}, ok: ${a.ok}`),!a.ok)throw console.error(">>> ReviewSummary: Response not OK",a.status,a.statusText),new Error(`API Error: ${a.status}`);console.log(">>> ReviewSummary: Receiving non-streamed JSON response..."),r.textContent="",t.classList.remove("loading"),e.classList.add("loaded");const i=a.headers.get("content-type");console.log(">>> ReviewSummary: Response Content-Type:",i);let l="Sorry, could not parse the summary.";console.log(">>> ReviewSummary: BEFORE response.json()");try{const e=await a.json();console.log(">>> ReviewSummary: AFTER response.json(), Data:",e),e&&"string"==typeof e.summary?l=e.summary:(console.error(">>> ReviewSummary: Invalid data structure",e),l="Error: Invalid response format.",t.classList.add("error"))}catch(e){console.error(">>> ReviewSummary: Error parsing JSON response:",e);try{const e=await a.text();console.warn(">>> ReviewSummary: Displaying raw text due to JSON parse error:",e),l=e}catch(e){console.error(">>> ReviewSummary: Failed to get raw text after JSON parse error:",e),l="Error loading summary."}t.classList.add("error")}r.textContent="",r.classList.remove("animate-text-reveal"),r.textContent=l,t.classList.contains("error")?o.classList.add("hidden"):(r.classList.add("animate-text-reveal"),o.classList.remove("hidden"))}catch(n){console.error(">>> ReviewSummary: CATCH BLOCK error:",n),r.textContent=`Error: ${n.message||"Could not load summary."}`,t.classList.remove("loading"),t.classList.add("error"),e.classList.add("loaded"),o.classList.add("hidden")}finally{console.log(">>> ReviewSummary: FINALLY block reached")}}};window.ReviewSummary=ReviewSummary,document.addEventListener("shopify:section:load",(function(e){const t=e.detail.sectionId,r=document.getElementById(`shopify-section-${t}`);if(!r)return;const o=r.querySelector("#review-summary-block");o&&"true"!==o.dataset.initialized&&(ReviewSummary.onMount(o),o.dataset.initialized="true")})),document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll('#review-summary-block:not([data-initialized="true"])').forEach((e=>{ReviewSummary.onMount(e),e.dataset.initialized="true"}))}));
//# sourceMappingURL=review-summary.min.js.map